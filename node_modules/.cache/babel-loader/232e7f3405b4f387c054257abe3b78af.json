{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\goels\\\\OneDrive\\\\Desktop\\\\React Course\\\\textutils\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react/cjs/react.development';\nimport './App.css';\nimport Alert from './components/Alert'; //import About from './components/About';\n\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm'; // import {\n//   BrowserRouter as Router,\n//   Route,\n//   Routes\n// } from \"react-router-dom\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => setAlert(null), 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#424244';\n      showAlert(\"Dark mode enabled\", \"success\"); //document.title =\"TextUtils: Dark Mode\";\n      // setInterval(() => {\n      //   document.title =\"TextUtils is Amazing\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title =\"Install TextUtils\";\n      // }, 1500);\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode enabled\", \"success\"); //document.title =\"TextUtils: Light Mode\";\n    }\n  }; // \"react\": \"^17.0.2\",\n  // \"react-dom\": \"^17.0.2\",\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      aboutText: \"About TextUtils\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: /*#__PURE__*/_jsxDEV(TextForm, {\n        showAlert: showAlert,\n        heading: \"Enter the text to analyze below:\",\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"yynMwYg97c38tJfP/35WTBv6oDs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/goels/OneDrive/Desktop/React Course/textutils/src/App.js"],"names":["useState","Alert","Navbar","TextForm","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,6BAAzB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB,C,CACA;AACA;AACA;AACA;AACA;;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,OAAD,CAAhC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;;AACA,QAAMS,SAAS,GAAE,CAACC,OAAD,EAASC,IAAT,KACjB;AACEH,IAAAA,QAAQ,CAAC;AACPI,MAAAA,GAAG,EAAEF,OADE;AAEPC,MAAAA,IAAI,EAAEA;AAFC,KAAD,CAAR;AAIAE,IAAAA,UAAU,CAAC,MACVL,QAAQ,CAAC,IAAD,CADC,EACO,IADP,CAAV;AAGD,GATD;;AAUA,QAAMM,UAAU,GAAE,MAAI;AACpB,QAAGT,IAAI,KAAK,OAAZ,EAAoB;AAClBC,MAAAA,OAAO,CAAC,MAAD,CAAP;AACAS,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAqC,SAArC;AACAT,MAAAA,SAAS,CAAC,mBAAD,EAAqB,SAArB,CAAT,CAHkB,CAIlB;AACA;AACA;AACA;AACA;AACA;AACA;AACD,KAXD,MAYI;AACFH,MAAAA,OAAO,CAAC,OAAD,CAAP;AACAS,MAAAA,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAqC,OAArC;AACAT,MAAAA,SAAS,CAAC,oBAAD,EAAsB,SAAtB,CAAT,CAHE,CAIF;AACD;AACF,GAnBD,CAba,CAiCX;AACA;;;AACF,sBACE;AAAA,4BAEJ,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,WAAd;AAA0B,MAAA,SAAS,EAAC,iBAApC;AAAsD,MAAA,IAAI,EAAEJ,IAA5D;AAAkE,MAAA,UAAU,EAAES;AAA9E;AAAA;AAAA;AAAA;AAAA,YAFI,eAGJ,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEP;AAAd;AAAA;AAAA;AAAA;AAAA,YAHI,eAIJ;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BASQ,QAAC,QAAD;AAAU,QAAA,SAAS,EAAEE,SAArB;AAAgC,QAAA,OAAO,EAAC,kCAAxC;AAA2E,QAAA,IAAI,EAAEJ;AAAjF;AAAA;AAAA;AAAA;AAAA;AATR;AAAA;AAAA;AAAA;AAAA,YAJI;AAAA,kBADF;AAsBD;;GAzDQD,G;;KAAAA,G;AA2DT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react/cjs/react.development';\nimport './App.css';\nimport Alert from './components/Alert';\n//import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Routes\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert =(message,type)=>\n  {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(()=>\n    (setAlert(null)),1500\n    )\n  }\n  const toggleMode =()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor ='#424244';\n      showAlert(\"Dark mode enabled\",\"success\");\n      //document.title =\"TextUtils: Dark Mode\";\n      // setInterval(() => {\n      //   document.title =\"TextUtils is Amazing\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title =\"Install TextUtils\";\n      // }, 1500);\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor ='white';\n      showAlert(\"Light mode enabled\",\"success\");\n      //document.title =\"TextUtils: Light Mode\";\n    }\n  }\n    // \"react\": \"^17.0.2\",\n    // \"react-dom\": \"^17.0.2\",\n  return (\n    <>\n    {/* <Router> */}\n<Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" mode={mode} toggleMode={toggleMode}/>\n<Alert alert={alert}/>\n<div className=\"container my-3\">\n{/* <Routes>\n          <Route exact path=\"/about\" element={<About/>} />\n            \n          \n          <Route exact path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Enter the text to analyze below:\" mode={mode} />} />\n            \n          \n        </Routes> */}\n        <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below:\" mode={mode} />\n        </div>\n        {/* </Router> */}\n\n\n    </>\n   \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}